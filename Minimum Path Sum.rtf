{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 public class Solution \{\
    public int minPathSum(int[][] grid) \{\
        int[][] dpresult=new int[grid.length][grid[0].length];\
        int m=grid.length;\
        int n=grid[0].length;\
        for(int i=0;i<m;i++)\{\
            for(int j=0;j<n;j++)\{\
                dpresult[i][j]=-1;\
            \}\
        \}\
        dpresult[0][0]=grid[0][0];\
        for(int i=1;i<m;i++)\{\
            dpresult[i][0]=dpresult[i-1][0]+grid[i][0];\
        \}\
        for(int j=1;j<n;j++)\{\
            dpresult[0][j]=dpresult[0][j-1]+grid[0][j];\
        \}\
        \
        for(int i=0;i<m;i++)\{\
            for(int j=0;j<n;j++)\{\
                dp(grid,i,j,dpresult);\
            \}\
        \}\
        \
        return dpresult[m-1][n-1];\
    \}\
    public static int dp(int[][] grid,int i,int j,int[][] dpresult)\{\
        if(dpresult[i][j]!=-1) return dpresult[i][j];\
        int fromleft=dp(grid,i,j-1,dpresult);\
        int fromup=dp(grid,i-1,j,dpresult);\
        int current=Math.min(fromleft,fromup)+grid[i][j];\
        dpresult[i][j]=current;\
        return current;\
    \}\
\}}