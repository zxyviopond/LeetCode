{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red63\green95\blue191;\red0\green0\blue192;
\red42\green0\blue255;\red63\green127\blue95;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 import\cf0  java.util.*;\
\
\pard\pardeftab720
\cf3 /*************************************************************************\cf0 \
\cf3  *  AddBinary \ul Leetcode\cf0 \ulnone \
\cf3  * \cf0 \
\cf3  *************************************************************************/\cf0 \
\pard\pardeftab720
\cf2 public\cf0  \cf2 class\cf0  Sourcecode \{\
	\
\
	\
	\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] arg)\{\
		Scanner scanner=\cf2 new\cf0  Scanner(System.\cf4 in\cf0 );\
		String a1 = scanner.next();\
		String a2 = scanner.next();\
		String r=addBinary(a1,a2);\
		System.\cf4 out\cf0 .println(r);\
	\}\
\
	\cf2 private\cf0  \cf2 static\cf0  String addBinary(String a1, String a2) \{\
		\cf2 char\cf0 [] ca1;\
		\cf2 char\cf0 [] ca2;\
		\cf2 if\cf0 (a1.length()>a2.length())\{\
		   ca1=a1.toCharArray();\
		   ca2=a2.toCharArray();\
		\}\
		\cf2 else\cf0 \{\
			ca1=a2.toCharArray();\
			ca2=a1.toCharArray();	\
		\}\
		\cf2 int\cf0  la1=ca1.\cf4 length\cf0 ;\
		\cf2 int\cf0  la2=ca2.\cf4 length\cf0 ;\
		\
		\cf2 char\cf0 [] nca2=\cf2 new\cf0  \cf2 char\cf0 [la1];\
		\cf2 int\cf0  i;\
		\cf2 for\cf0 (i=la1-1;i>=la1-la2;i--)\{\
			nca2[i]=ca2[la2-(la1-i)];\
		\}\
		\cf2 for\cf0 (;i>=0;i--)\{\
			nca2[i]=\cf5 '0'\cf0 ;\
		\}\
		String r = add(ca1,nca2);\
		\cf6 //System.out.println(r);\cf0 \
		\cf2 return\cf0  r;\
		\
	\}\
\
	\cf2 private\cf0  \cf2 static\cf0  String add(\cf2 char\cf0 [] ca1, \cf2 char\cf0 [] ca2) \{\
		ArrayList<Character> myarray=\cf2 new\cf0  ArrayList<Character>();\
		\cf2 int\cf0  flag=0;\
		\cf2 for\cf0 (\cf2 int\cf0  i=ca1.\cf4 length\cf0 -1;i>=0;i--)\{\
			\cf2 char\cf0  char1=ca1[i];\
			\cf2 char\cf0  char2=ca2[i];\
			\cf2 if\cf0 (char1==\cf5 '1'\cf0 &&char2==\cf5 '1'\cf0 )\{\
				\cf2 if\cf0 (flag==0)\{\
				myarray.add(\cf5 '0'\cf0 );\
				flag=1;\
				\}\
				\cf2 else\cf0 \{\
					myarray.add(\cf5 '1'\cf0 );\
					flag=1;\
				\}\
				\
			\}\
            \cf2 if\cf0 (char1==\cf5 '1'\cf0 &&char2==\cf5 '0'\cf0 )\{\
				\cf2 if\cf0 (flag==0)\{\
					myarray.add(\cf5 '1'\cf0 );\
				\}\
				\cf2 else\cf0 \{\
					myarray.add(\cf5 '0'\cf0 );\
					flag=1;\
				\}\
			\}\
            \cf2 if\cf0 (char1==\cf5 '0'\cf0 &&char2==\cf5 '1'\cf0 )\{\
            	\cf2 if\cf0 (flag==0)\{\
					myarray.add(\cf5 '1'\cf0 );\
				\}\
				\cf2 else\cf0 \{\
					myarray.add(\cf5 '0'\cf0 );\
					flag=1;\
				\}\
	\
            \}\
            \cf2 if\cf0 (char1==\cf5 '0'\cf0 &&char2==\cf5 '0'\cf0 )\{\
            	\cf2 if\cf0 (flag==0)\{\
					myarray.add(\cf5 '0'\cf0 );\
				\}\
				\cf2 else\cf0 \{\
					myarray.add(\cf5 '1'\cf0 );\
					flag=0;\
				\}\
	\
            \}\
			\
		\}\
		\cf2 if\cf0 (flag==1) myarray.add(\cf5 '1'\cf0 );\
		Collections.reverse(myarray);\
		\cf2 char\cf0 [] resultc=\cf2 new\cf0  \cf2 char\cf0 [myarray.size()];\
		\cf2 for\cf0 (\cf2 int\cf0  i=0;i<myarray.size();i++) resultc[i]=myarray.get(i);\
		\
		\cf2 return\cf0  String.valueOf(resultc);\
	\}\
\
	\
	\
	\
	\
\}}