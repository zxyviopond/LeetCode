{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red63\green95\blue191;\red0\green0\blue192;
\red42\green0\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 import\cf0  java.util.*;\
\
\pard\pardeftab720
\cf3 /*************************************************************************\cf0 \
\cf3  *   \ul Leetcode\ulnone  \ul Soduko\cf0 \ulnone \
\cf3  *************************************************************************/\cf0 \
\pard\pardeftab720
\cf2 public\cf0  \cf2 class\cf0  Sourcecode \{\
	\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] arg)\{\
		Scanner input=\cf2 new\cf0  Scanner(System.\cf4 in\cf0 );\
		String string1=input.next();\
		String string2=input.next();\
		System.\cf4 out\cf0 .println(isMatch(string1,string2));\
		\
	\}\
\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 boolean\cf0  isMatch(String s, String p) \{\
        \cf2 boolean\cf0  \ul result\ulnone =\cf2 false\cf0 ;\
        \cf2 char\cf0 [] schar=s.toCharArray();\
        \cf2 char\cf0 [] pchar=p.toCharArray();\
        \cf2 int\cf0  m=schar.\cf4 length\cf0 ;\
        \cf2 int\cf0  n=pchar.\cf4 length\cf0 ;\
        \cf2 short\cf0 [][] dpresult=\cf2 new\cf0  \cf2 short\cf0 [m][n];\
        \cf2 for\cf0 (\cf2 int\cf0  i=0;i<m;i++)\{\
        	\cf2 for\cf0 (\cf2 int\cf0  j=0;j<n;j++)\{\
        		 dpresult[i][j]=-1;\
        	\}\
        \}\
        \
        \cf2 for\cf0 (\cf2 int\cf0  i=0;i<m;i++)\{\
        	\cf2 for\cf0 (\cf2 int\cf0  j=0;j<n;j++)\{\
        		 isMatch(schar,pchar,i,j,dpresult);\
        	\}\
        \}\
        \
        \cf2 return\cf0  isMatch(schar,pchar,m-1,n-1,dpresult);\
        \
    \}\
\
	\cf2 private\cf0  \cf2 static\cf0  \cf2 boolean\cf0  isMatch(\cf2 char\cf0 [] schar, \cf2 char\cf0 [] pchar, \cf2 int\cf0  i, \cf2 int\cf0  j,\cf2 short\cf0 [][] dpresult) \{\
		\
		\cf2 if\cf0 (i==-1&&j==-1) \cf2 return\cf0  \cf2 true\cf0 ;\
		\cf2 if\cf0 (i==-1)\{\
			\cf2 boolean\cf0  result=\cf2 true\cf0 ;\
			\cf2 for\cf0 (\cf2 int\cf0  t=0;t<=j;t++)\{\
				\cf2 if\cf0 (pchar[t]!=\cf5 '*'\cf0 )\{\
					\cf2 return\cf0  \cf2 false\cf0 ;\
				\}\
			\}\
			\cf2 return\cf0  result;\
		\}\
		\
		\cf2 if\cf0 (j==-1) \cf2 return\cf0  \cf2 false\cf0 ;\
		\cf2 if\cf0 (dpresult[i][j]!=-1)\{\
			\cf2 if\cf0 (dpresult[i][j]==1)\{\
				\cf2 return\cf0  \cf2 true\cf0 ;\
			\}\
			\cf2 else\cf0 \{\
				\cf2 return\cf0  \cf2 false\cf0 ;\
			\}\
			\
		\}\
		\cf2 boolean\cf0  result=\cf2 false\cf0 ;\
		\cf2 if\cf0 (schar[i]==pchar[j])\{\
			result=isMatch(schar,pchar,i-1,j-1,dpresult);\
		\}\
		\cf2 if\cf0 (pchar[j]==\cf5 '?'\cf0 )\{\
			result=isMatch(schar,pchar,i-1,j-1,dpresult);\
		\}\
		\cf2 if\cf0 (pchar[j]==\cf5 '*'\cf0 )\{\
			\cf2 boolean\cf0  tmp=\cf2 false\cf0 ;\
			\cf2 for\cf0 (\cf2 int\cf0  t=-1;t<=i;t++)\{\
				tmp=tmp|isMatch(schar,pchar,t,j-1,dpresult);\
			\}\
			result=tmp;\
		\}\
		\cf2 if\cf0 (result==\cf2 true\cf0 )\{\
		dpresult[i][j]=1;\
		\}\
		\cf2 else\cf0 \{\
			dpresult[i][j]=0;\
		\}\
		\cf2 return\cf0  result;\
	\}\
\
	 \
\}}