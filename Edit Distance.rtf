{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red63\green95\blue191;\red0\green0\blue192;
\red63\green127\blue95;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 import\cf0  java.util.*;\
\
\pard\pardeftab720
\cf3 /*************************************************************************\cf0 \
\cf3  *   \ul Leetcode\ulnone  Edit Distance\cf0 \
\cf3  *************************************************************************/\cf0 \
\pard\pardeftab720
\cf2 public\cf0  \cf2 class\cf0  Sourcecode \{\
	\
   \
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] arg)\{\
		Scanner input=\cf2 new\cf0  Scanner(System.\cf4 in\cf0 );\
		String s1=input.next();\
		String s2=input.next();\
		System.\cf4 out\cf0 .println(minDistance(s1,s2));\
	\}\
\
\cf2 public\cf0  \cf2 static\cf0  \cf2 int\cf0  minDistance(String word1, String word2) \{\
        \cf2 char\cf0 [] s1=word1.toCharArray();\
        \cf2 char\cf0 [] s2=word2.toCharArray();\
        \cf2 int\cf0  len1=s1.\cf4 length\cf0 ;\
        \cf2 int\cf0  len2=s2.\cf4 length\cf0 ;\
        \cf2 int\cf0 [][] dpresult=\cf2 new\cf0  \cf2 int\cf0 [len1+1][len2+1];\
        \cf2 for\cf0 (\cf2 int\cf0  i=0;i<len1+1;i++)\{\
        	\cf2 for\cf0 (\cf2 int\cf0  j=0;j<len2+1;j++)\{\
        		dpresult[i][j]=-1;\
        	\}\
        \}\
        dpresult[0][0]=0;\
        \cf2 for\cf0 (\cf2 int\cf0  i=1;i<len1+1;i++)\{\
        	dpresult[i][0]=i;\
        \}\
        \cf2 for\cf0 (\cf2 int\cf0  j=1;j<len2+1;j++)\{\
        	dpresult[0][j]=j;\
        \}\
        \cf2 for\cf0 (\cf2 int\cf0  i=1;i<=len1;i++)\{\
        	\cf2 for\cf0 (\cf2 int\cf0  j=1;j<=len2;j++)\{\
        		dp(s1,s2,i,j,dpresult);\
        	\}\
        \}\
        \cf2 return\cf0  dpresult[len1][len2];\
        \
    \}\
\
\cf2 private\cf0  \cf2 static\cf0  \cf2 int\cf0  dp(\cf2 char\cf0 [] s1, \cf2 char\cf0 [] s2, \cf2 int\cf0  i, \cf2 int\cf0  j, \cf2 int\cf0 [][] dpresult) \{\
	\cf5 //System.out.println("\ul dp\ulnone  executed,"+"i="+i+"j="+j);\cf0 \
	\cf2 int\cf0  ii=i-1;\
	\cf2 int\cf0  jj=j-1;\
	\cf2 if\cf0 (dpresult[i][j]!=-1) \cf2 return\cf0  dpresult[i][j];\
	\cf2 if\cf0 (s1[ii]!=s2[jj])\{\
		\cf5 //System.out.println(i+"is not equal to"+j);\cf0 \
		\cf2 int\cf0  min=dp(s1,s2,i-1,j-1,dpresult);\
		\cf2 int\cf0  gap1=dp(s1,s2,i-1,j,dpresult);\
		\cf2 if\cf0 (gap1<min) min=gap1;\
		\cf2 int\cf0  gap2=dp(s1,s2,i,j-1,dpresult);\
		\cf2 if\cf0 (gap2<min) min=gap2;\
		\cf2 int\cf0  \ul t\ulnone =1+min;\
		\cf5 //System.out.println("i="+i+",j="+j+"set to"+t);\cf0 \
		dpresult[i][j]=1+min;\
		\cf2 return\cf0  1+min;\
	\}\
	\cf2 else\cf0 \{\
		\cf5 //System.out.println(i+"is equal to"+j);\cf0 \
		dpresult[i][j]=dp(s1,s2,i-1,j-1,dpresult);\
		\cf5 //System.out.println("i="+i+",j="+j+"set to"+\ul dpresult\ulnone [i][j]);\cf0 \
		\cf2 return\cf0  dp(s1,s2,i-1,j-1,dpresult);\
	\}\
	\
\}\
	\
\}
\f1\fs24 \
}