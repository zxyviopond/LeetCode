{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 /**\
 * Definition for binary tree with next pointer.\
 * public class TreeLinkNode \{\
 *     int val;\
 *     TreeLinkNode left, right, next;\
 *     TreeLinkNode(int x) \{ val = x; \}\
 * \}\
 */\
public class Solution \{\
    public void connect(TreeLinkNode root) \{\
         if(root==null) return ;\
        if(root.left!=null)\{\
            root.left.next=root.right;\
            if(root.right==null)\{\
                 TreeLinkNode p=root;\
                 while(p!=null)\{\
                      p=p.next;\
                      if(p==null)\{\
                          root.left.next=null;break;\
                      \}\
                     if(p.left!=null)\{\
                      root.left.next=p.left;\
                      break;\
                      \}\
                      else\{\
                        if(p.right!=null)\{\
                        root.left.next=p.right;\
                        break;\
                        \}\
                        \
                      \}\
                      \
                 \}\
               \
                \
            \}\
        \}\
        if(root.right!=null)\{\
                 TreeLinkNode p=root;\
                 while(p!=null)\{\
                      p=p.next;\
                      if(p==null)\{\
                          root.right.next=null;\
                          break;\
                      \}\
                     if(p.left!=null)\{\
                      root.right.next=p.left;\
                      break;\
                      \}\
                      else\{\
                        if(p.right!=null)\{\
                        root.right.next=p.right;\
                        break;\
                        \}\
                        \
                      \}\
                     \
                      \
                 \}\
                \
        \}\
        connect(root.right);\
        connect(root.left);\
        \
    \}\
\}}