{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 /**\
 * Definition for singly-linked list.\
 * public class ListNode \{\
 *     int val;\
 *     ListNode next;\
 *     ListNode(int x) \{\
 *         val = x;\
 *         next = null;\
 *     \}\
 * \}\
 */\
public class Solution \{\
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) \{\
        if(l1==null) return l2;\
        if(l2==null) return l1;\
        ListNode startnode=new ListNode(0);\
        ListNode previous=startnode;\
        ListNode p1=l1;\
        ListNode p2=l2;\
        while(p1!=null&&p2!=null)\{\
            if(p1.val<p2.val)\{\
                previous.next=p1;\
                previous=p1;\
                p1=p1.next;\
            \}\
            else\{\
                previous.next=p2;\
                previous=p2;\
                p2=p2.next;\
            \}\
        \}\
        if(p2==null) previous.next=p1;\
        if(p1==null) previous.next=p2;\
        \
        return startnode.next;\
    \}\
\}}