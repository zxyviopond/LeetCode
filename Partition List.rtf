{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 public class Solution \{\
    public ListNode partition(ListNode head, int x) \{\
        if(head==null) return null;\
        if(head.next==null) return head;\
        ListNode largeorequal=new ListNode(-10000);\
        ListNode smaller = new ListNode(-10000);\
        ListNode currentlarger=largeorequal;\
        ListNode currentsmaller=smaller;\
        ListNode current=head;\
        while(current!=null)\{\
            int tmpvalue=current.val;\
            if(tmpvalue<x)\{\
                currentsmaller.next=current;\
                currentsmaller=current;\
            \}\
            else\{\
                currentlarger.next=current;\
                currentlarger=current;\
            \}\
            current=current.next;\
        \}\
        currentlarger.next=null;\
        currentsmaller.next=largeorequal.next;\
        \
        //Concat the two part\
        \
        return smaller.next;\
    \}\
\}}