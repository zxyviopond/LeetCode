{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 /**\
 * Definition for binary tree\
 * public class TreeNode \{\
 *     int val;\
 *     TreeNode left;\
 *     TreeNode right;\
 *     TreeNode(int x) \{ val = x; \}\
 * \}\
 */\
public class Solution \{\
    public boolean isValidBST(TreeNode root) \{\
        if(root==null) return true;\
        boolean leftisvalid=isValidBST(root.left);\
        if(!leftisvalid) return false;\
        boolean rightisvalid=isValidBST(root.right);\
        if(!rightisvalid) return false;\
        boolean leftisok=dfs(root.left,root.val,1);\
        if(!leftisok) return false;\
        boolean rightisok=dfs(root.right,root.val,2);\
        if(!rightisok) return false;\
        return true;\
        \
    \}\
    \
    public boolean dfs(TreeNode node,int val,int mode)\{\
        if(node==null) return true;\
        if(mode==1)\{\
            if(node.val>=val) return false;\
            boolean left=dfs(node.left,val,1);\
            if(!left) return false;\
            boolean right=dfs(node.right,val,1);\
            if(!right) return false;\
            \
            return true;\
        \}\
        \
        if(mode==2)\{\
            if(node.val<=val) return false;\
            boolean left=dfs(node.left,val,2);\
            if(!left) return false;\
            boolean right=dfs(node.right,val,2);\
            if(!right) return false;\
            return true;\
        \}\
        return true;\
        \
    \}\
\}}