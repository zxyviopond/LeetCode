{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 public class Solution \{\
    public int uniquePathsWithObstacles(int[][] obstacleGrid) \{\
        int[] count=new int[1];\
        int m=obstacleGrid.length;\
        int n=obstacleGrid[0].length;\
        dfs(0,0,obstacleGrid,m,n,count);\
        return count[0];\
        \
    \}\
    \
    public void dfs(int i,int j,int[][] grid,int m,int n, int[] count)\{\
        if(i>=m) return;\
        if(j>=n) return;\
        if(grid[i][j]==1) return;\
        if(i==m-1&&j==n-1)\{count[0]++;return;\}\
        dfs(i+1,j,grid,m,n,count);\
        dfs(i,j+1,grid,m,n,count);\
    \}\
\}}