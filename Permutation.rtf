{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red63\green95\blue191;\red0\green0\blue192;
\red63\green127\blue95;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 import\cf0  java.util.*;\
\
\pard\pardeftab720
\cf3 /*************************************************************************\cf0 \
\cf3  *   \ul Leetcode\ulnone  Permutation\cf0 \
\cf3  *************************************************************************/\cf0 \
\pard\pardeftab720
\cf2 public\cf0  \cf2 class\cf0  Sourcecode \{\
	\
	\cf2 public\cf0  \cf2 static\cf0  \cf2 void\cf0  main(String[] arg)\{\
		Scanner input=\cf2 new\cf0  Scanner(System.\cf4 in\cf0 );\
		\cf2 int\cf0  n = input.nextInt();\
		\cf2 int\cf0 [] A = \cf2 new\cf0  \cf2 int\cf0 [n];\
		\cf2 for\cf0 (\cf2 int\cf0  i=0;i<n;i++)\{\
			A[i]=input.nextInt();\
		\}\
		ArrayList<ArrayList<Integer>> result=permute(A);\
		\cf2 for\cf0 (\cf2 int\cf0  i=0;i<result.size();i++)\{\
			System.\cf4 out\cf0 .println(result.get(i));\
		\}\
	\}\
\
	\cf2 public\cf0  \cf2 static\cf0  ArrayList<ArrayList<Integer>> permute(\cf2 int\cf0 [] a) \{\
		ArrayList<ArrayList<Integer>> resultarray=\cf2 new\cf0  ArrayList<ArrayList<Integer>>();\
		\cf2 int\cf0 [] result=\cf2 new\cf0  \cf2 int\cf0 [a.\cf4 length\cf0 ];\
		\cf2 for\cf0 (\cf2 int\cf0  i=0;i<result.\cf4 length\cf0 ;i++)\{\
			result[i]=-10000;\
		\}\
		permuation(a,0,result,resultarray);\
		\cf2 return\cf0  resultarray;\
	\}\
	\
	\cf2 private\cf0  \cf2 static\cf0  \cf2 void\cf0  permuation(\cf2 int\cf0  a[],\cf2 int\cf0  cur,\cf2 int\cf0 [] result,ArrayList<ArrayList<Integer>> ar)\{\
		\cf2 if\cf0 (cur==a.\cf4 length\cf0 )\{\
			ArrayList<Integer> solution = \cf2 new\cf0  ArrayList<Integer>();\
			\cf2 for\cf0 (\cf2 int\cf0  i=0;i<result.\cf4 length\cf0 ;i++)\{\
				solution.add(result[i]);\
			\}\
			ar.add(solution);\
			\cf2 return\cf0 ;\
		\}\
		\cf5 //Try every value\cf0 \
		\cf2 for\cf0 (\cf2 int\cf0  i=0;i<a.\cf4 length\cf0 ;i++)\{\
			\cf2 int\cf0  ok=1;\
			\cf2 for\cf0 (\cf2 int\cf0  j=0;j<result.\cf4 length\cf0 ;j++)\{\
				\cf5 //System.out.println("a[i]:"+a[i]+",a[j]="+a[j]);\cf0 \
				\cf2 if\cf0 (result[j]==a[i])\{\
					ok=0;\
					\cf2 break\cf0 ;\
				\}\
			\}\
			\cf2 if\cf0 (ok==1)\{\
				result[cur]=a[i];\
				permuation(a,cur+1,result,ar);\
			   result[cur]=-10000;\
			\}\
		\}\
		\cf2 return\cf0 ;\
	\}\
	\
	\
\
	\
	\
	\
\
	 \
\}}