{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 public class Solution \{\
    public int totalNQueens(int n) \{\
        int[] count=new int[1];\
        int[][] grid=new int[n][n];\
        put(0,n,grid,count);\
        return count[0];\
    \}\
    \
    private static void put(int i, int n, int[][] grid,\
    	int[] count) \{\
		if(i==n)\{\
			//System.out.println("solution!");\
			count[0]++;\
			return;\
		\}\
		for(int j=0;j<n;j++)\{\
			grid[i][j]=1;\
			if(conflict(i,j,grid,n))\{\
				grid[i][j]=0;\
			\}\
			else\{\
				put(i+1,n,grid,count);\
				grid[i][j]=0;\
			\}\
			\
		\}\
		\
	\}\
\
	private static boolean conflict(int i, int j, int[][] grid,int n) \{\
		\
		for(int t=0;t<i;t++)\{\
			if(grid[t][j]==1) return true;\
		\}\
		\
		for(int t=0;t<i;t++)\{\
    		if(i+j-t<n&&grid[t][i+j-t]==1) return true;\
		\}\
		\
		for(int t=0;t<i;t++)\{\
			\
					if(t-i+j>=0&&grid[t][t-i+j]==1) return true;\
				\
			\
		\}\
\
		return false;\
	\}\
\}}