{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 public class Solution \{\
    public static boolean hasPathSum(TreeNode root, int sum) \{\
        if(root==null) return false;\
        \
       ArrayList<Integer> combo = new ArrayList<Integer>();\
       boolean result=dfs(root,sum,combo);\
       return result;\
        \
    \}\
    public static boolean dfs(TreeNode root,int sum,ArrayList<Integer> combo)\{\
        if(root==null) return false;\
        if(root.left==null&&root.right==null)\{\
            combo.add(root.val);\
            int asum=0;\
            for(int i=0;i<combo.size();i++)\{\
                asum+=combo.get(i);\
            \}\
            if(asum==sum)\{\
                return true;\
            \}\
            else\{\
                combo.remove(combo.size()-1);\
                return false;\
            \}\
        \}\
        combo.add(root.val);\
        boolean leftworks=dfs(root.left,sum,combo);\
        boolean rightworks=dfs(root.right,sum,combo);\
        if(leftworks||rightworks) return true;\
        combo.remove(combo.size()-1);\
        return false;\
    \}\
\}}