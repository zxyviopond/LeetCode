{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 //O(n)\
public class Solution \{\
    public static class pair\{\
    	int val;\
		int index;\
		pair(int v,int i)\{\
			val=v;\
			index=i;\
		\}\
	\}\
   public static int largestRectangleArea(int[] height) \{\
    	Stack<pair> stack=new Stack<pair>();\
		stack.push(new pair(0,-1));\
        int max=0;\
        int maxarea=0;\
        for(int i=0;i<height.length+1;i++)\{\
        	//System.out.println("i="+i);\
        	if(i<height.length&&height[i]>max)\{//Add Opening\
        		//System.out.println("opening at "+i);\
        		stack.push(new pair(height[i],i));\
        		max=height[i];\
        		//System.out.println("max="+max);\
        		continue;\
        	\}\
        	if(i==height.length||(i<=height.length-1&&height[i]<max))\{//End\
        		int value;\
        		if(i==height.length)\{\
        			value=0;\
        		\}\
        		else \{value=height[i];\}\
        		//System.out.println("ending at "+i);\
        		pair thisone = null;\
        		while(!stack.isEmpty()&&value<max)\{\
        			pair tmp=stack.peek();\
        			if(tmp.val<value) break;\
        			thisone=tmp;\
        			int width=i-thisone.index;\
        			int theheight=thisone.val;\
        			//System.out.println("width:"+width+",minvalue="+theheight);\
        			//System.out.println("thisarea="+width*theheight);\
        			maxarea=Math.max(maxarea, width*theheight);\
        			//System.out.println("maxarea:"+maxarea);\
        			max=thisone.val;\
        			stack.pop();\
        		\}\
        		if(i<=height.length-1&&thisone!=null)\{\
        		thisone.val=value;\
        		stack.push(thisone);\
                        max=thisone.val;\
        		\}\}\
        		\
        \}\
        \
        \
        return maxarea;\
        \
    \}\
\
        \
\}}